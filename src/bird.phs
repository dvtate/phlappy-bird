"../node_modules/postfix-haskell/planning/stdlib/prelude.phs" require use
"../node_modules/postfix-haskell/planning/stdlib/mem.phs" require $mem =
"./engine.phs" require $game =

##
# Bird - the thwomp
##
(   F32 # y
    F32 # dy
) class $Bird =
((Bird): 1 ) (: unpack pop ) $y fun
((Bird): 1 ) (: unpack swap pop ) $dy fun

# Bird constant dimensions
200 $X =       # Bird does not move side to side
40 $WIDTH =    # Width of bird sprite
45 $HEIGHT =   # Height of bird sprite

((Bird): # Get hitbox
    unpack pop $y =
    X y WIDTH 3 - HEIGHT 3 -
) $hitbox =

((Bird): # Apply gravity to the bird
    unpack ( $y $dy ) =
    (   y dy +
        dy game.GRAVITY +
    ) Bird make
) $update =

((Bird): # Update trajectory
    unpack ( $y $_ ) =
    ( y -6.0f ) Bird make
) $flap =

((Unit Bird): # Draw a thwomp where the bird is
    unpack ( $y $dy ) =
    X y WIDTH HEIGHT
    ( Unit I32 F32 I32 I32 ) ( Unit ) Arrow
    ( "js" "drawThwomp" ) import @
) $draw =

# Overload static memory operators
((Bird I32): 1 ) (:
    $addr = unpack ( $y $dy ) =
    y addr static_init
    dy addr 4 + static_init
) $mem.static_init fun
((Unit Bird I32): 1 ) (:
    $addr = unpack ( $y $dy ) =
    y addr store
    dy addr 4 + store
) $mem.store fun